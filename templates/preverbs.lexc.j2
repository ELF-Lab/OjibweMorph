{#
   This jinja2 template should be processed using a python script
   to generate preverbs.lexc.
#}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!                         !!
!!   Symbol declarations   !!
!!                         !!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Multichar_Symbols

PVSub/ PVTense/ PVDir/ PVRel/ PVLex/ PVQnt/ ChCnj+
%<ChCnj%>
@U.Order.Cnj@
@U.Order.Ind@
@U.ChCnj.On@
@R.ChCnj.On@
@D.ChCnj@
@C.ChCnj@
! We sometimes end up with empty sub-lexicons. This can cause
! artificial ambiguity (and even epsilon loops) due to sequences of
! flag diacritics, which slows down analysis. Therefore, we mark empty
! entries with an <EMPTYLEX> tag and filter them out using a
! post-processing rule in phonology.xfst.
%<EMPTYLEX%>

! We'll define all preverb tags like PVTense/gii+ as multichar symbols 
{{ all_pre_element_tags() }}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!                         !!
!!   PV lexicons start     !!
!!                         !!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

LEXICON Root
SubPV ;
# ;

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!                         !!
!!   Subordinating PV      !!
!!                         !!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

LEXICON SubPV
@U.Order.Cnj@ SubPVPlainConjunct ;
TensePV ;

LEXICON SubPVPlainConjunct
ChCnj+:0 ChCnjPV ;
{{ load_pre_element_csv([("PV_sub.csv", "PVSub/")], "SubPVBoundary", "PlainConjunct") }}

LEXICON ChCnjPV
@U.ChCnj.On@ TensePVChangedConjunct ;
@U.ChCnj.On@ DirPVChangedConjunct ;
@U.ChCnj.On@:@U.ChCnj.On@%<ChCnj%> TensePV ;

LEXICON SubPVBoundary
0:- TensePV ;

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!                         !!
!!        Tense PV         !!
!!                         !!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

LEXICON TensePV
TensePVAny ;
@U.Order.Ind@ TensePVIndependent ;
@U.Order.Cnj@ TensePVPlainConjunct ;
DirPV ;

{{ generate_pre_element_sub_lexicons([("PV_tns.csv", "PVTense/")], "TensePV") }}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!                         !!
!!     Directional PV      !!
!!                         !!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

LEXICON DirPV
DirPVAny ;
@U.Order.Ind@ DirPVIndependent ;
@U.Order.Cnj@ DirPVPlainConjunct ;
RelPV ;

{{ generate_pre_element_sub_lexicons([("PV_dir.csv", "PVDir/")], "DirPV") }}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!                         !!
!!       Relative PV       !!
!!                         !!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

LEXICON RelPV
RelPVAny ;
@U.Order.Ind@ RelPVIndependent ;
@U.Order.Cnj@ RelPVPlainConjunct ;
LexPV ;

{{ generate_pre_element_sub_lexicons([("PV_rel.csv", "PVRel/")], "RelPV") }}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!                         !!
!!        Lexical PV       !!
!!                         !!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

LEXICON LexPV
LexPVAny ;
@U.Order.Ind@ LexPVIndependent ;
@U.Order.Cnj@ LexPVPlainConjunct ;
# ;

{{ generate_pre_element_sub_lexicons([("PV_lex.csv", "PVLex/"), ("PV_qnt.csv", "PVQnt/")], "LexPV") }}


