! There are flags at morpheme boundaries.
set flag-is-epsilon ON

define Cons [ b | c | d | f | g | h | j | k | l | m | n | p | s | t | v | w | x | y | z ] ;
define Vowel [ a | e | i | o ] ;
define NonLight [[Vowel ?* Vowel] | e ] ?* ;

! Sometimes there may be more than one consecutive
! morpheme boundary. Reduce those to 1.
define PrefixBoundaryCleanup ["<<"]+ @-> "<<" ;
define SuffixBoundaryCleanup [">>"]+ @-> ">>" ;


! d-deletion: Delete stem-final "d" when the suffix complex starts with a consonant.
define dDeletion d -> 0 || _ ">>" Cons ;

! This rule MUST PRECEED the "ShortV-deletion" rule
! i1-Palatalization: Stems ending in "n" palatalize to "zh" and "s" to "sh" when the suffix complex starts with the first person theme sign "i1".
define n1Rule n1 -> {zh} || _ ">>" i1 ;
define s1Rule s1 -> {sh} || _ ">>" i1 ;
define n1Default n1 -> n ;
define s1Default s1 -> s ;

define i1Rule i1 -> i ;

! Nasal assimilation: With stems ending in "m" (e.g. VAI stems "minongwaam"), the "m" changes to "n" when the suffix complex starts with "z" (negation) or a
! "g" (3SgProx in the conjunct) or "d" (inclusive simple imperative)
define amRule1 m -> a || a _ ">>" [m|n] ;
define amRule2 m -> n || a _ ">>" [z|g|d] ;

! aw-to-aa: For stems that end in "aw", the "aw" goes to "aa" when the suffix complex starts with "g" or "k".
! aw-to-oo: For stems that end in "aw", the "aw" goes to "oo" when the suffix complex starts with "n" or "s".
define awaaRule w -> a || a _ ">>" [k|g] ;
define awooRule a w -> o o || _ ">>" [n|s] ;

!define nDeletion n -> 0 || [ i | o o ] _ ">>" Cons ;

! ShortV-deletion: Delete word-final short vowels
! This rule MUST PRECEED the "w-deletion" rule
define vowelDeletion [ Vowel - e ] -> 0 || NonLight Cons (">>") _ (">>") .#. ;

! w-to-o: For stems that end in "Cw", the "w" goes to "o" when the suffix complex starts with an "i" or "i1".
! AKA, wi -> o / C __
! In Border Lakes, this only happens when w is not the last character in the word so we need to allow for
! wi word-finally.
define wRule1 [ w -> o1 || Cons _ ">>" [i|i1] (">>") [? - (">>")] ] .o. [[i|i1] -> 0 || o1 ">>" _ ] .o. [o1 -> o];
define wRule2 [ w (->) o1 || Cons _ ">>" [i|i1] (">>") .#. ] .o. [[i|i1] -> 0 || o1 ">>" _ ] .o. [o1 -> o];

! W-deletion: Delete word-final "w" (occurs with neutral, positive 3sg)
! This role MUST FOLLOW i1-Palatalization and w-to-o
define wDeletion w1 -> 0 || _ (">>") .#. ;
define wDefault w1 -> w ;

! Sources:
! https://ojibwe.lib.umn.edu/main-entry/g-pf
! https://ojibwe.lib.umn.edu/main-entry/g-pf
! https://ojibwegrammar.langsci.wisc.edu/Assets/Pdfs/InflAnishPersonPrefixes1.02.pdf
!Border Lakes prefix rules:

!ni(m/n/nd)-
!ni- before m, n, w, p, t, k, s, sh
!nim- before b
!nin- before d, j, z, zh, g
!nind- before vowels

!gi(d)-
!gi- before consonants
!gid- before vowels

!o(d)-
!o- before consonants
!od- before vowels
define PrefixDInsertion [..] -> d || .#. ("<<") [{gi}|o|{ni}] _ "<<" Vowel ;
define PrefixNDInsertion [..] (->) n || .#. ("<<") {ni} _ d "<<" Vowel ;
define PrefixDDeletion d (->) 0 || .#. ("<<") {nin} _ "<<" ;
define PrefixIND {nid} (->) [{ind} | {nd}] || .#. ("<<") _ "<<";
define PrefixMInsertion [..] (->) m || .#. ("<<") {ni} _ "<<" b ;
define PrefixNInsertion [..] (->) n || .#. ("<<") {ni} _ "<<" [d|j|z|{zh}|g] ;
define PrefixOLengthening o -> {oo} || .#. ("<<") [ [ [ n | g ] i | o | {nin} ] d | {nin} ] "<<" _ \o ; 

!ni-/n- before m, n, w, p, t, k, s, sh
!nim-/im-/m-/ni- before b
!nin-/in-/n-/ni- before d, j, z, zh, g
!nind-/ind-/nd- before vowels
!At Red Lake, we get niy- before aa

! Nasal vowel rule 
! y -> h / VVn_#
define YRule y -> h || [Vowel Vowel | e] n (">>") _ (">>") .#. ;

! Changed conjunct rules
define ChCnjV {aa}:{ayaa} | a:e | e:{aye} | {ii}:{aa} | i:e | {oo}:{waa} | o:{we} @-> || "<ChCnj>" [? - Vowel]* _ ;
define cleanUpChCnj "<ChCnj>" -> 0 ;

! VAI vowel lengthening
define LengthenV [ i:{ii} | a:{aa} | {e}:e | o:{oo} @-> || _ ">>" V1 ] .o. [ V1 -> 0 ] ;

define emptyFilter [? - "<EMPTYLEX>"]* ;

define cleanUp ["<<"|">>"] -> 0 ; 


! Read preverbs from preverbs.lexc
read lexc preverbs.lexc
define VPrefixes ;
read lexc ojibwe_verbs.lexc
substitute defined VPrefixes for "[PREVERB]"
define Lexicon ;

read regex [emptyFilter .o.
            cleanUp.i ] .o. Lexicon .o. [ dDeletion .o.
     	   	     	 	       n1Rule .o.
				       s1Rule .o.
     	   	     	 	       n1Default .o.
				       s1Default .o.				       
     	   	                       amRule1 .o.
     	   	                       amRule2 .o.
				       awaaRule .o.
				       awooRule .o.
				       wRule1 .o.
				       wRule2 .o.				       
				       i1Rule .o.
			               vowelDeletion .o.
			               wDeletion .o.
				       wDefault .o.					
!			               nDeletion .o.
                                       YRule .o.
				       LengthenV .o.								       
			               PrefixDInsertion .o.
				       PrefixNDInsertion .o.
				       PrefixDDeletion .o.
				       PrefixIND .o.
				       PrefixMInsertion .o.
				       PrefixNInsertion .o.				       
			               PrefixOLengthening .o.
				       ChCnjV .o.
				       cleanUpChCnj .o.
				       emptyFilter ] ;

! Make sure @P.Alt@ flag is on both sides

define Analyzer ;

set flag-is-epsilon OFF

define AltRule1 [..] -> "@P.Alt.On@" || .#. "@P.Prefix.NI@" [{ind} "<<"       |
                                                             {nd}  "<<"       |
							     {nin} "<<" Vowel ]  ?* _ .#. ;
read regex Analyzer .o. AltRule1 ;
twosided flag-diacritics
define Analyzer
define AltRule2 [..] -> "+Alt" || _ "@P.Alt.On@" ;
read regex AltRule2.i .o. Analyzer ;
define Analyzer

set flag-is-epsilon ON

read regex Analyzer .o. cleanUp ;
define Analyzer ;

read lexc ojibwe_irregular_verbs.lexc
define IrregularLexicon ;

read regex Analyzer | IrregularLexicon ;

!define Analyzer

! Closed classes
!read lexc lexc_source/numerals.lexc
!define Numerals ;

!read lexc lexc_source/particles.lexc
!define Particles ;

!read lexc lexc_source/adverbs.lexc
!define Adverbs ;

!read lexc lexc_source/quantifiers.lexc
!define Quantifiers ;

!read lexc lexc_source/pronouns.lexc
!define Pronouns ;

!read regex [ Analyzer |
!             Numerals |
!	     Particles |
!	     Adverbs |
!	     Quantifiers |
!	     Pronouns ];

! Just to be on the safe side, let's always remove the flag
! diacritics. It doesn't really increase the size too much
! but it does prevent the occasional infinite loop when
! generating. 
eliminate flags
save stack ojibwe.fomabin

