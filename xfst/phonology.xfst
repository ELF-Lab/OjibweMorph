! There are flags at morpheme boundaries.
set flag-is-epsilon ON


! Defining natural classes and morphological boundaries

! All consonants, including special characters
define Cons [ b | c | d | f | g | h | j | k | l | m | n | n1 | p | s | s1 | t | v | w | w1 | w2 | x | y | z | "'" ] ;

! implictly includes long vowels, which just repeats characters
define Vowel [ a | e | i | o | V1 ] ;

! nonlight vowels are simply short vowels
define NonLight [[Vowel ?* Vowel] | e ] ?* ;

! Short stems consist of a single short vowel, and resist short vowel deletion. 
! Currently not used.
define ShortStem [ "<<" [ Vowel - e ] Cons Cons ">>" | "<<" (Cons) [ Vowel - e ] Cons ">>" ] ;

! Define stem boundary markers
define PREBD "<<"+ ;
define SUFBD ">>"+ ;
define BD ["<<" | ">>"]+ ;

! Sometimes there may be more than one consecutive
! morpheme boundary. Reduce those to 1.
define PrefixBoundaryCleanup PREBD @-> "<<" ;
define SuffixBoundaryCleanup SUFBD @-> ">>" ;


! Begin suffix rules

! Begin verb suffix rules

! d-deletion: Delete stem-final "d" when the suffix complex starts with a consonant.
define dDeletion d -> 0 || _ SUFBD Cons ;

! Nasal assimilation: With stems ending in "m" (e.g. VAI stems "minongwaam"), the "m" changes to "n" when the suffix complex starts with "z" (negation) or a
! "g" (3SgProx in the conjunct) or "d" (inclusive simple imperative)
define amRule1 m -> a || a _ SUFBD [m|n] ;
define nasalAssimilation m -> n || a _ SUFBD [z|g|d] ;

! aw-to-aa: For stems that end in "aw", the "aw" goes to "aa" when the suffix complex starts with "g" or "k".
! aw-to-oo: For stems that end in "aw", the "aw" goes to "oo" when the suffix complex starts with "n" or "s".
define awaaRule w -> a || a _ SUFBD [k|g] ;
define awooRule a w -> o o || _ SUFBD [n|s] ;

! currently not used
!define nDeletion n -> 0 || [ i | o o ] _ SUFBD Cons ;

! w-to-o: For stems that end in "Cw", the "w" goes to "o" when the suffix complex starts with an "i" or "i1".
! AKA, wi -> o / C __
! In Border Lakes, this only happens when w is not the last character in the word so we need to allow for
! wi word-finally.
define woRule1 [ w -> o1 || Cons _ SUFBD [i|i1] (SUFBD) [? - (SUFBD)] ] .o. [[i|i1] -> 0 || o1 SUFBD _ ] .o. [o1 -> o];
define woRule2 [ w (->) o1 || Cons _ SUFBD [i|i1] (SUFBD) .#. ] .o. [[i|i1] -> 0 || o1 SUFBD _ ] .o. [o1 -> o];


! shared noun and verb suffix rules

! This rule MUST PRECEED the ShortV-deletion rule
! i1-Palatalization: Stems ending in "n" palatalize to "zh" and "s" to "sh" when the suffix complex starts with the first person theme sign "i1".
define n1Rule n1 -> {zh} || _ SUFBD [i1|i2] ;
define s1Rule s1 -> {sh} || _ SUFBD [i1|i2] ;

define n1Default n1 -> n ;
define s1Default s1 -> s ;
define i1Default i1 -> i ;

! ShortV-deletion: Delete word-final short vowels
! This rule MUST PRECEED the "w-deletion" rule
define vowelDeletion [ Vowel - e ] -> 0 || NonLight Cons (SUFBD) _ (SUFBD) .#. ;

! W-deletion: Delete word-final "w" (occurs with neutral, positive 3sg)
! This role MUST FOLLOW i1-Palatalization and w-to-o
define w1Deletion w1 -> 0 || _ (SUFBD) .#. ;
define w1Default w1 -> w ;

! VAI vowel lengthening
define LengthenV [ i:{ii} | a:{aa} | {e}:e | o:{oo} @-> || _ SUFBD V1 ] .o. [ V1 -> 0 ] ;


! noun-specific suffix rules

!w2-deletion: w2 deletes word finally, before consonants, before vowels "o", before "oo", and before "V1" (so remains before vowels a, aa, i, ii, and e)
!MUST PRECEDE ShortV-Lengthening
!MUST FOLLOW ShortV-Deletion
define w2Deletion w2 -> 0 || _ (BD) [o | V1 | Cons | .#. ] ; 
define w2Default w2 -> w ;

! y -> h / VVn_#
define y1hRule y1 -> h || [Vowel Vowel | e] n (SUFBD) _ (SUFBD) .#. ;

! Delete y at the end of words
define y1Deletion y1 -> 0 || _ (SUFBD) .#. ;

! Delete h optionally
define hDeletion h (->) 0 || n _ y1 ;

! Irregular diminutive form nouns ending in -(i)gan. Appears as -gaans rather than -ganens
define irrDimGan g a n (SUFBD) e n  -> g a a n (SUFBD) ;

! 
define irrDimVVny [Vowel Vowel | e] n y1 (SUFBD) e n (->) [Vowel Vowel | e] n (SUFBD) ;

!
define y2Deletion y2 -> 0 ;

!
define y1Default y1 -> y ;

!
define restoreChars [a1:a | i2:i ] @-> || _ ;

! Begin prefix rules

! Sources:
! https://ojibwe.lib.umn.edu/main-entry/g-pf
! https://ojibwe.lib.umn.edu/main-entry/g-pf
! https://ojibwegrammar.langsci.wisc.edu/Assets/Pdfs/InflAnishPersonPrefixes1.02.pdf
!Border Lakes prefix rules:

!ni(m/n/nd)-
!ni- before m, n, w, p, t, k, s, sh
!nim- before b
!nin- before d, j, z, zh, g
!nind- before vowels

!gi(d)-
!gi- before consonants
!gid- before vowels

!o(d)-
!o- before consonants
!od- before vowels

!ni-/n- before m, n, w, p, t, k, s, sh
!nim-/im-/m-/ni- before b
!nin-/in-/n-/ni- before d, j, z, zh, g
!nind-/ind-/nd- before vowels
!At Red Lake, we get niy- before aa

define PrefixDInsertion [..] -> d || .#. (PREBD) [{gi}|o|{ni}] _ PREBD Vowel ;
define PrefixNDInsertion [..] (->) n || .#. (PREBD) {ni} _ d PREBD Vowel ;
define PrefixDDeletion d (->) 0 || .#. (PREBD) {nin} _ PREBD ;
define PrefixIND {nid} (->) [{ind} | {nd}] || .#. (PREBD) _ PREBD;
define PrefixMInsertion [..] (->) m || .#. (PREBD) {ni} _ PREBD b ;
define PrefixNInsertion [..] (->) n || .#. (PREBD) {ni} _ PREBD [d|j|z|{zh}|g] ;

define prefixOLengthening o -> {oo} || .#. (PREBD) [ [ [ n | g ] i | o | {nin} ] d | {nin} ] PREBD _ \o ; 

! Dependent noun prefix rules
define DepPrefixIInsertion [..] -> i || .#. (PREBD) [{g}|{n}] _ PREBD Cons ;
define DepPrefixWtoO w -> o || .#. (PREBD) _ PREBD Cons ;
define DepPrefixWDeletion w -> 0 || .#. (PREBD) _ PREBD o ;

! Changed conjunct rules
define ChCnjV {aa}:{ayaa} | a:e | e:{aye} | {ii}:{aa} | i:e | {oo}:{waa} | o:{we} @-> || "<ChCnj>" [? - Vowel]* _ ;
define cleanUpChCnj "<ChCnj>" -> 0 ;

! Tense-tensing rule Lenis consonants ("b", "d", "j", "g", "z", "zh") are strengthened to
! the fortis counterpart ("p", "t", "ch", "k", "s", "sh") following the past tense preverbs
! (gii-/gii'-) and desiderative future tense preverbs (wii-/wii'-).
define tenseTensing b:p | d:t | j:{ch} | g:k | z:s | {zh}:{sh} @-> || [ .#. | "-" ] [ g | w ] [ {ii} | {aa} ] ("'") "-" _ ;


! Clean up rules

define emptyFilter [? - "<EMPTYLEX>"]* ;

define cleanUp BD -> 0 ; 


! Composition, etc. Needs a lot more documentation

! Read preverbs from preverbs.lexc
read lexc preverbs.lexc
define VPrefixes ;
read lexc ojibwe_verbs.lexc
substitute defined VPrefixes for "[PREVERB]"
define VerbLexicon ;

define zero 0 ;
read lexc ojibwe_nouns.lexc
substitute defined zero for "[PRENOUN]"
define NounLexicon ;

read lexc ojibwe_pronouns.lexc
define PronounLexicon ;

define Lexicon [ VerbLexicon    |
                 NounLexicon    |
		 PronounLexicon ] ;

read regex [emptyFilter .o.
            cleanUp.i ] .o. Lexicon .o. [ 
						y2Deletion .o.
     	   	     	 	n1Rule .o.
     	   	     	 	irrDimGan .o.
				       	s1Rule .o.
     	   	     	 	n1Default .o.
				       	s1Default .o.				       
     	   	            amRule1 .o.
     	   	            nasalAssimilation .o.
				       	awaaRule .o.
				       	awooRule .o.
				       	woRule1 .o.
				       	woRule2 .o.				       
				       	i1Default .o.
			            vowelDeletion .o.
			            w1Deletion .o.
				       	w1Default .o.
				       	w2Deletion .o.
				       	w2Default .o.
                       	dDeletion .o.				       
!						nDeletion .o.
                        y1hRule .o.
				       	y1Deletion .o.
				      	hDeletion .o.
				       	irrDimVVny .o.
				      	y1Default .o.
				       	LengthenV .o.								       
			           	DepPrefixIInsertion .o.
					   	DepPrefixWtoO .o.
					   	DepPrefixWDeletion .o.
			           	PrefixDInsertion .o.					   
				       	PrefixNDInsertion .o.
				       	PrefixDDeletion .o.
				       	PrefixIND .o.
				       	PrefixMInsertion .o.
				       	PrefixNInsertion .o.				       
			           	prefixOLengthening .o.
				       	ChCnjV .o.
				       	tenseTensing .o.
				       	restoreChars .o.
				       	cleanUpChCnj .o.
				       	emptyFilter ] ;

! Make sure @P.Alt@ flag is on both sides

define Analyzer ;

set flag-is-epsilon OFF

define AltRule1 [..] -> "@P.Alt.On@" || .#. "@P.Prefix.NI@" [{ind} PREBD       |
                                                             {nd}  PREBD       |
							     {nin} PREBD Vowel ]  ?* _ .#. ;
read regex Analyzer .o. AltRule1 ;
twosided flag-diacritics
define Analyzer
define AltRule2 [..] -> "+Alt" || _ "@P.Alt.On@" ;
read regex AltRule2.i .o. Analyzer ;
define Analyzer

set flag-is-epsilon ON

read regex Analyzer .o. cleanUp ;
define Analyzer ;

read lexc ojibwe_irregular_verbs.lexc
define IrregularVerbLexicon ;

read lexc ojibwe_irregular_nouns.lexc
define IrregularNounLexicon ;

define IrregularLexicon [IrregularNounLexicon | 
                         IrregularVerbLexicon ] ;

read regex Analyzer | IrregularLexicon ;

eliminate flags
save stack ojibwe.fomabin

